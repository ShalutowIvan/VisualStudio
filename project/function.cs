/*
using System;
namespace Project
{

    class function
    {

        static void Main()
        {
            //Print(); //просто вызвали функцию
            // Print("Hello");//указали значение параметра
            //     string words = "Hello world";
            //     Print(words);//указали значений параметра в виде переменной
            //с помощью вызова функции мы используем тот код который записан в фукнции, то есть в текущем случае выводим в консоль просто написав название функции
            Summa(5, 6);//вызвали функцию и указали значение параметров
            int a = 555;
            int b = 777;
            Summa(a, b); //вызвали функцию и указали значение параметров через другие переменные
            int z = 111;
            int x = 222;
            int res1 = Summma(7, 7);//значения выполнения функции возвращающей значение записали в переменную, в качестве параметров для функции также просто написали значения
            int res2 = Summma(z, x);//значения выполнения функции возвращающей значение записали в переменную, в качестве параметров для функции указали переменные, значения которых присвоили заранее
            Print("Результат = " + res1.ToString());//выводим с помощью фукнции для вывода в консоль и переводим результат в тип String, также можно дописывать слова в кавычках
            Print("Киса мурлыса = " + res2.ToString());//то же самое

        }

        //public static void Print()//static означает что можем обращаться к функции через название класса, и не нужно создавать объект на основе этого класса чтобы обратиться к этой функции, то есть она будет принадлежать всему классу в целом
        // {
        //    System.Console.WriteLine("Hello");

        // }

        public static void Print(string word)//передали в функцию параметр, написали тип и название парамета(переменную) в скобках, потом когда функцию будем вызывать то будет выводиться значение этого же типа что и мы указали в параметре функции, и значение которое мы напишем будет записано в название переменной параметра и код из фукнции выполнится с этими значениями которые мы присвоим в параметр функции
        {
            System.Console.WriteLine(word);//этот же параметр и выводим в консоль

        }

        public static void Summa(int x, int y)//указали типы параметров функции
        {
            int res = x + y;
            System.Console.WriteLine("Результат = " + res);
            Print("Результат = " + res);//вызвали другую функцию для вывода результата, можно вызывать другие функции в других функциях если они с типом public
        }

        //void означает что функция ничего не возвращает, но функция может возращать значения. Результат функции можно записать в переменную и с этой переменной работать. То есть при обычной функции просто считается результат и значение выводится и дальше не используется, а с результатом возращащей функцией можно еще что-то сделать, например записать его в переменную и что-то еще посчитать
//возвращаяющая функция
        public static int Summma(int x, int y)//указали тип данных для значения возвращения вместо void для функции, отличие от void в том что после return сразу выполняется действие
        {
            return x + y;//возвращаем сумму параметров функции
        }



    }


}
*/